@model niteco_mvc_project.Models.OrderListResponse

@{
    ViewBag.Title = "Main function page";
}

@using (Html.BeginForm("Index", "Default", FormMethod.Get))
{
    <p>
        @Html.TextBox("searchString", Model.SearchString, new { placeholder = "Search by Product Name" })
        <input type="submit" value="Search" />
    </p>
}

<table class="table">
    <tr>
        <th>Product Name</th>
        <th>Category Name</th>
        <th>Customer Name</th>
        <th>Order Date</th>
        <th>Amount</th>
    </tr>
    @if (Model.TotalCount > 0)
    {
        foreach (var item in Model.Orders)
        {
            <tr>
                <td>@item.ProductName</td>
                <td>@item.CategoryName</td>
                <td>@item.CustomerName</td>
                <td>@item.OrderDate</td>
                <td>@item.Amount</td>
                <td>
                    @Html.ActionLink("Edit", "Orders/Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Orders/Details", new { id = item.Id })
                </td>
            </tr>
        }

    }
    else
    {
        <tr>
            <td>--</td>
            <td>--</td>
            <td>--</td>
            <td>--</td>
            <td>--</td>
            <td>
                Edit |
                Details
            </td>
        </tr>
    }
</table>

@if (Model.TotalPages > 1)
{
    <div class="pagination">
        @if (Model.CurrentPage > 1)
        {
            <a href="@Url.Action("Index", new { PageNumber = 1, PageSize = Model.PageSize, FullTextSearch = Model.SearchString })">First</a>
            <a href="@Url.Action("Index", new { PageNumber = Model.CurrentPage - 1, PageSize = Model.PageSize, FullTextSearch = Model.SearchString })">Previous</a>
        }

        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            if (i == Model.CurrentPage)
            {
                <span>@i</span>
            }
            else
            {
                <a href="@Url.Action("Index", new { PageNumber = i, PageSize = Model.PageSize, FullTextSearch = Model.SearchString })">@i</a>
            }
        }

        @if (Model.CurrentPage < Model.TotalPages)
        {
            <a href="@Url.Action("Index", new { PageNumber = Model.CurrentPage + 1, PageSize = Model.PageSize, FullTextSearch = Model.SearchString })">Next</a>
            <a href="@Url.Action("Index", new { PageNumber = Model.TotalPages, PageSize = Model.PageSize, FullTextSearch = Model.SearchString })">Last</a>
        }
    </div>
}

<p>
    @Html.ActionLink("Create new order", "CreateOrder")
</p>